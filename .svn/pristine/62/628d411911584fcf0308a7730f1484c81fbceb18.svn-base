<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:set var="ctx" value="${pageContext.request.contextPath}"/>
<html>
<head>
    <title>自采订单</title>
</head>
<body>
<input style="display: none" type="hidden" id="storeId" value="${storeId}">
<!-- Main Content -->
<div class="page-wrapper">
    <div class="container-fluid">
        <!-- Row -->
        <div class="row">
            <div class="col-sm-12">
                    <%--<div class="panel-heading">
                        <div class="pull-left">
                            <ol class="breadcrumb">
                                <li><a href="${ctx}/index">首页</a></li>
                                <li class="active">自采订单</li>
                            </ol>
                        </div>
                        <div class="clearfix"></div>
                    </div>--%>
                    <div>
                        <div class="panel-body">
                            <div class="table-wrap">
                                <table id="orderList" class="table" data-paging="true" data-filtering="true" data-sorting="true">
                                </table>
                            </div>
                        </div>
                    </div>
            </div>
        </div>
        <!-- /Row -->
    </div>
</div>
<script>
    $(function () {
        var orderTitle = [
            {
                "name": "id",
                "title": "ID",
                "breakpoints": "xs sm",
                "visible": false
            },
            {"name": "storeId", "title": "门店id","visible":false},
            {"name": "storeName", "title": "门店名称","visible":false},
            {"name": "employerId", "title": "员工id","visible":false},
            {"name": "num", "title": "订单编号"},
            {"name": "employerName", "title": "员工名称"},
            {"name": "supplierId", "title": "供应商id","visible":false},
            {"name": "supplierName", "title": "供应商名称"},
            {"name": "status", "title": "订单状态(0:预订 1:下单 2:入库)"},
            {"name": "ordertime", "title": "下单时间","style":{"width":120,"maxWidth":240}},
            {"name": "tell", "title": "联系方式"},
            {"name": "sumprice", "title": "总价"},
            {"name": "type", "title": "类型","visible":false},
            {"name": "applicationtime", "title": "申请时间","style":{"width":120,"maxWidth":240}},
            {"name": "remark", "title": "备注"},
            {"name": "details","title":"详情"}
        ];


        //查询详情
        function findDetails(values) {
            if (values.status==0) {
                //这里写你的逻辑就行了
                window.location.href = "${ctx}/orderDetails/selectDetailsByOrderId?orderId=" + values.id + "&detailstype=" + 4;
            }else if (values.status==1||values.status==2){
                window.location.href = "${ctx}/orderDetails/selectReadDetailsByOrderId?orderId=" + values.id + "&detailstype=" + 4;
            }

        }
        window.findDetails = findDetails;
        //启动模态框
        var $modal = $('#app-editor-modal'),
            $editor = $('#editor'),
            $editorTitle = $('#editor-title')
        //启动footable
        var ft = FooTable.init('#orderList', {
            "columns": orderTitle,
            "rows": $.get("${ctx}/goodsOrder/selectByMyself", function (data) {
                $(data).each(function () {
                    this.details = "<button id='cx' class='btn btn-primary btn-sm'  onclick='findDetails(" + JSON.stringify(this) + ")'>点击查看</button>";

                });
                //
                return data;
            }),
            editing: {
                enabled: true,
                addRow: function(){
                    //新增模态框
                    var $that = $(this);
                    var dialog = BootstrapDialog.show({
                        type : BootstrapDialog.TYPE_DEFAULT,
                        title : "<span style=\"color:#ab8ce4\">新增一条数据</span>",
                        closable: false,
                        draggable: true,
                        cssClass: 'api-blacklist-form-add',
                        message:$('<div></div>').load('${ctx}/template/storesandsales/otherorderlist.jsp'),//加载弹出页面
                        size : BootstrapDialog.SIZE_WIDE,//弹出框大小。
                        onhide:function(){
                            $that.removeAttr("disabled");
                        },
                        buttons : [{
                            id: 'btn-form-submit',
                            label: '提交',
                            icon: 'fa fa-check-circle',
                            cssClass: 'btn-primary',
                            action: function(){
                                var json = {

                                    'id': $('#id').val(),
                                    'storeId': $('#storeId').val(),
                                    'supplierId': $('#supplierId').val(),
                                    'status': $('#status').val(),
                                    'employerId': $('#employerId').val(),
                                    'ordertime': $('#ordertime').val(),
                                    'tell': $('#tell').val(),
                                    'remark': $('#remark').val(),
                                    'type': $('#type').val(),
                                    'sumprice': $('#sumprice').val(),
                                    'applicationtime': $('#applicationtime').val()
                                };
                                $("#myform").bootstrapValidator({
                                    live: 'disabled',//验证时机，enabled是内容有变化就验证（默认），disabled和submitted是提交再验证
                                    excluded: [':disabled', ':hidden', ':not(:visible)'],//排除无需验证的控件，比如被禁用的或者被隐藏的
                                    submitButtons: '#btn-test',//指定提交按钮，如果验证失败则变成disabled，但我没试成功，反而加了这句话非submit按钮也会提交到action指定页面
                                    message: '通用的验证失败消息',//好像从来没出现过
                                    feedbackIcons: {//根据验证结果显示的各种图标
                                        valid: 'glyphicon glyphicon-ok',
                                        invalid: 'glyphicon glyphicon-remove',
                                        validating: 'glyphicon glyphicon-refresh'
                                    },
                                    fields: {
                                        storeId: {
                                            validators: {
                                                notEmpty: {
                                                    message: '门店id不能为空'
                                                },
                                            }

                                        },
                                        supplierId: {
                                            validators: {
                                                notEmpty: {
                                                    message: '供应商id不能为空'
                                                },
                                            }

                                        },
                                        employerId: {
                                            validators: {
                                                notEmpty: {
                                                    message: '员工id不能为空'
                                                },
                                            }

                                        },
                                        tell: {
                                            validators: {
                                                notEmpty: {
                                                    message: '手机号不能为空'
                                                },
                                                regexp : {
                                                    regexp: /^1(3|4|5|7|8)\d{9}$/,
                                                    message: '手机号格式不正确！'
                                                },
                                            }

                                        },
                                        ordertime: {
                                            validators: {
                                                notEmpty: {
                                                    message: '下单时间不能为空'
                                                },
                                            }

                                        }
                                    }
                                });
                                var bootstrapValidator = $("#myform").data('bootstrapValidator');
                                bootstrapValidator.validate();
                                if (bootstrapValidator.isValid()) {

                                    $.post("${ctx}/goodsOrder/saveOtherOrder",json).
                                    done(function(data){getCode(data)}).
                                    fail(function(data){getCode(data)});
                                }}
                        },{
                            label : '关闭',
                            icon: 'fa fa-close',
                            action : function(dialogItself) {
                                dialogItself.close();
                            }
                        } ]
                    });
                },
                //这里是修改时绑定数据
                editRow: function(row){
                    var values = row.val();
                    var $that = $(this);
                    //失效

                    $that.attr("disabled","disabled");
                    // 调用add方法
                    var dialog = BootstrapDialog.show({
                        type : BootstrapDialog.TYPE_DEFAULT,
                        title : "<span style=\"color:#ab8ce4\">修改一条数据</span>",
                        closable: false,
                        draggable: true,
                        cssClass: 'api-blacklist-form-add',
                        message:$('<div></div>').load('${ctx}/template/storesandsales/otherorderlist.jsp'),//加载弹出页面
                        size : BootstrapDialog.SIZE_WIDE,//弹出框大小。
                        //数据回显
                        onshown: function(dialogRef){
                            $('#id').val(values.id),
                                $('#storeId').val(values.storeId),
                                $('#supplierId').val(values.supplierId),
                                $('#status').val(values.status),
                                $('#employerId').val(values.employerId),
                                $('#ordertime').val(values.ordertime),
                                $('#type').val(values.type),
                                $('#tell').val(values.tell),
                                $('#remark').val(values.remark),
                                $('#sumprice').val(values.sumprice),
                                $('#applicationtime').val(values.applicationtime)


                        },
                        buttons : [{
                            id: 'btn-form-submit',
                            label: '提交',
                            icon: 'fa fa-check-circle',
                            cssClass: 'btn-primary',
                            action: function(){

                                var beforeStatus=values.status;

                                var afterStatus=$('#status').val();

                                if (beforeStatus==1&&afterStatus==0) {
                                    PNotify.prototype.options.styling = "bootstrap3";
                                    var delay = 1000 * 2;
                                    new PNotify({
                                        title: 'Oh No!',
                                        text: '下单之后只能入库！',
                                        delay: delay,
                                        hide: true,
                                        type: 'error'
                                    });
                                    return;
                                }
                                if (beforeStatus==0&&afterStatus==2) {
                                    PNotify.prototype.options.styling = "bootstrap3";
                                    var delay = 1000 * 2;
                                    new PNotify({
                                        title: 'Oh No!',
                                        text: '入库之前必须下单！',
                                        delay: delay,
                                        hide: true,
                                        type: 'error'
                                    });
                                    return;
                                }
                                if (beforeStatus==2) {
                                    PNotify.prototype.options.styling = "bootstrap3";
                                    var delay = 1000 * 2;
                                    new PNotify({
                                        title: 'Oh No!',
                                        text: '入库之后不能操作！',
                                        delay: delay,
                                        hide: true,
                                        type: 'error'
                                    });
                                    return;
                                }
                                var json = {
                                    'id': $('#id').val(),
                                    'num': values.num,
                                    'storeId': $('#storeId').val(),
                                    'supplierId': $('#supplierId').val(),
                                    'status': $('#status').val(),
                                    'employerId': $('#employerId').val(),
                                    'ordertime': $('#ordertime').val(),
                                    'tell': $('#tell').val(),
                                    'remark': $('#remark').val(),
                                    'type': $('#type').val(),
                                    'sumprice': $('#sumprice').val(),
                                    'applicationtime': $('#applicationtime').val()

                                };

                                $.post("${ctx}/goodsOrder/updateOrder",json).
                                done(function(data){getCode(data)}).
                                fail(function(data){getCode(data)});
                            }
                        },{
                            label : '关闭',
                            icon: 'fa fa-close',
                            action : function(dialogItself) {
                                dialogItself.close();
                            }
                        } ]
                    });
                },
                //删除操作
                deleteRow: function(row){
                    if(row.value.status==1||row.value.status==2){
                        PNotify.prototype.options.styling = "bootstrap3";
                        var delay = 1000 * 2;
                        new PNotify({
                            title: 'Oh No!',
                            text: '下单/入库订单不能删除！',
                            delay: delay,
                            hide: true,
                            type: 'error'
                        });
                        return;
                    }
                    myConfirm("${ctx}/goodsOrder/deleteOrderById",row);
                }
            }
        });
        uid = 10;
    });


</script>
</body>
</html>

