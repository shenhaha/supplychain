<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luer.storesdata.dao.RoomMapper">
    <resultMap id="BaseResultMap" type="com.luer.storesdata.bean.Room">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="room_styles_id" property="roomStylesId" jdbcType="VARCHAR"/>
        <result column="store_id" property="storeId" jdbcType="VARCHAR"/>
        <result column="classify" property="classify" jdbcType="VARCHAR"/>
        <result column="position" property="position" jdbcType="VARCHAR"/>
        <result column="num" property="num" jdbcType="VARCHAR"/>
        <result column="area" property="area" jdbcType="VARCHAR"/>
        <result column="charge" property="charge" jdbcType="INTEGER"/>
        <result column="roomStylesName" property="roomStylesName" jdbcType="VARCHAR"/>
    </resultMap>
    <select id="getAllRooms" parameterType="string" resultMap="BaseResultMap">
        select * from room where store_id=#{storeId};
    </select>
    <update id="updateRooms" parameterType="map">
        UPDATE room SET classify=#{classify} where room_styles_id=#{room_styles_id}
    </update>
    <select id="getOneRoom" resultMap="BaseResultMap">
        select * from room WHERE classify=#{classify} and num=#{num}
    </select>
    <select id="selectByStoreId" resultMap="BaseResultMap">

      SELECT  r.id,r.room_styles_id,r.store_id,r.classify,r.position,r.num,r.area,r.charge,rs.room_style as roomStylesName
FROM  room r,room_styles rs WHERE r.store_id = #{storeId} and r.room_styles_id=rs.id
    </select>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, room_styles_id, store_id, classify, position, num, area, charge
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luer.storesdata.bean.RoomExample">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from room
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from room
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from room
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.luer.storesdata.bean.RoomExample">
        delete from room
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.luer.storesdata.bean.Room">
    insert into room (id, room_styles_id, store_id, 
      classify, position, num, 
      area, charge)
    values (#{id,jdbcType=VARCHAR}, #{roomStylesId,jdbcType=VARCHAR}, #{storeId,jdbcType=VARCHAR}, 
      #{classify,jdbcType=VARCHAR}, #{position,jdbcType=VARCHAR}, #{num,jdbcType=VARCHAR}, 
      #{area,jdbcType=VARCHAR}, #{charge,jdbcType=INTEGER})
  </insert>
    <insert id="insertSelective" parameterType="com.luer.storesdata.bean.Room">
        insert into room
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="roomStylesId != null">
                room_styles_id,
            </if>
            <if test="storeId != null">
                store_id,
            </if>
            <if test="classify != null">
                classify,
            </if>
            <if test="position != null">
                position,
            </if>
            <if test="num != null">
                num,
            </if>
            <if test="area != null">
                area,
            </if>
            <if test="charge != null">
                charge,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="roomStylesId != null">
                #{roomStylesId,jdbcType=VARCHAR},
            </if>
            <if test="storeId != null">
                #{storeId,jdbcType=VARCHAR},
            </if>
            <if test="classify != null">
                #{classify,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                #{position,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                #{num,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                #{area,jdbcType=VARCHAR},
            </if>
            <if test="charge != null">
                #{charge,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.luer.storesdata.bean.RoomExample" resultType="java.lang.Integer">
        select count(*) from room
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update room
        <set>
            <if test="record.id != null">
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.roomStylesId != null">
                room_styles_id = #{record.roomStylesId,jdbcType=VARCHAR},
            </if>
            <if test="record.storeId != null">
                store_id = #{record.storeId,jdbcType=VARCHAR},
            </if>
            <if test="record.classify != null">
                classify = #{record.classify,jdbcType=VARCHAR},
            </if>
            <if test="record.position != null">
                position = #{record.position,jdbcType=VARCHAR},
            </if>
            <if test="record.num != null">
                num = #{record.num,jdbcType=VARCHAR},
            </if>
            <if test="record.area != null">
                area = #{record.area,jdbcType=VARCHAR},
            </if>
            <if test="record.charge != null">
                charge = #{record.charge,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update room
        set id = #{record.id,jdbcType=VARCHAR},
        room_styles_id = #{record.roomStylesId,jdbcType=VARCHAR},
        store_id = #{record.storeId,jdbcType=VARCHAR},
        classify = #{record.classify,jdbcType=VARCHAR},
        position = #{record.position,jdbcType=VARCHAR},
        num = #{record.num,jdbcType=VARCHAR},
        area = #{record.area,jdbcType=VARCHAR},
        charge = #{record.charge,jdbcType=INTEGER}
        <if test="_parameter != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.luer.storesdata.bean.Room">
        update room
        <set>
            <if test="roomStylesId != null">
                room_styles_id = #{roomStylesId,jdbcType=VARCHAR},
            </if>
            <if test="storeId != null">
                store_id = #{storeId,jdbcType=VARCHAR},
            </if>
            <if test="classify != null">
                classify = #{classify,jdbcType=VARCHAR},
            </if>
            <if test="position != null">
                position = #{position,jdbcType=VARCHAR},
            </if>
            <if test="num != null">
                num = #{num,jdbcType=VARCHAR},
            </if>
            <if test="area != null">
                area = #{area,jdbcType=VARCHAR},
            </if>
            <if test="charge != null">
                charge = #{charge,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.luer.storesdata.bean.Room">
    update room
    set room_styles_id = #{roomStylesId,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=VARCHAR},
      classify = #{classify,jdbcType=VARCHAR},
      position = #{position,jdbcType=VARCHAR},
      num = #{num,jdbcType=VARCHAR},
      area = #{area,jdbcType=VARCHAR},
      charge = #{charge,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    <select id="selectByRoomStyleId" resultMap="BaseResultMap">


      SELECT  r.id,r.room_styles_id,r.store_id,r.classify,r.position,r.num,r.area,r.charge,rs.room_style as roomStylesName
FROM  room r,room_styles rs WHERE r.store_id = #{storeId} and r.room_styles_id=rs.id and room_styles_id = #{roomStylesId}

    </select>
</mapper>