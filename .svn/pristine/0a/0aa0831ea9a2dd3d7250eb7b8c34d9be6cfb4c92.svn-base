<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luer.businessmanager.dao.CallrecordMapper" >
  <resultMap id="BaseResultMap" type="com.luer.businessmanager.bean.Callrecord" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="tell" property="tell" jdbcType="VARCHAR" />
    <result column="forwhom" property="forwhom" jdbcType="VARCHAR" />
    <result column="way" property="way" jdbcType="VARCHAR" />
    <result column="personnel" property="personnel" jdbcType="VARCHAR" />
    <result column="take_time" property="takeTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="is_registration" property="isRegistration" jdbcType="VARCHAR" />
    <result column="note" property="note" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="VARCHAR" />
    <result column="times" property="times" jdbcType="INTEGER" />
    <result column="callcontent" property="callcontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.luer.businessmanager.bean.Callrecord" extends="BaseResultMap" >
    <result column="callcontent" property="callcontent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, tell, forwhom, way, personnel, take_time, update_time, is_registration,
    note, store_id, times,callcontent
  </sql>
  <sql id="Blob_Column_List" >
    callcontent
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.luer.businessmanager.bean.CallrecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from callrecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luer.businessmanager.bean.CallrecordExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from callrecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from callrecord
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from callrecord
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.luer.businessmanager.bean.CallrecordExample" >
    delete from callrecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.luer.businessmanager.bean.Callrecord" >
    insert into callrecord (id, name, tell,
    forwhom, way, personnel,
    take_time, update_time, is_registration,
    note, store_id, times,
    callcontent)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{tell,jdbcType=VARCHAR},
    #{forwhom,jdbcType=VARCHAR}, #{way,jdbcType=VARCHAR}, #{personnel,jdbcType=VARCHAR},
    #{takeTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{isRegistration,jdbcType=VARCHAR},
    #{note,jdbcType=VARCHAR}, #{storeId,jdbcType=VARCHAR}, #{times,jdbcType=INTEGER},
    #{callcontent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.luer.businessmanager.bean.Callrecord" >
    insert into callrecord
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="tell != null" >
        tell,
      </if>
      <if test="forwhom != null" >
        forwhom,
      </if>
      <if test="way != null" >
        way,
      </if>
      <if test="personnel != null" >
        personnel,
      </if>
      <if test="takeTime != null" >
        take_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="isRegistration != null" >
        is_registration,
      </if>
      <if test="note != null" >
        note,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="times != null" >
        times,
      </if>
      <if test="callcontent != null" >
        callcontent,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tell != null" >
        #{tell,jdbcType=VARCHAR},
      </if>
      <if test="forwhom != null" >
        #{forwhom,jdbcType=VARCHAR},
      </if>
      <if test="way != null" >
        #{way,jdbcType=VARCHAR},
      </if>
      <if test="personnel != null" >
        #{personnel,jdbcType=VARCHAR},
      </if>
      <if test="takeTime != null" >
        #{takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRegistration != null" >
        #{isRegistration,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="times != null" >
        #{times,jdbcType=INTEGER},
      </if>
      <if test="callcontent != null" >
        #{callcontent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.luer.businessmanager.bean.CallrecordExample" resultType="java.lang.Integer" >
    select count(*) from callrecord
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update callrecord
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tell != null" >
        tell = #{record.tell,jdbcType=VARCHAR},
      </if>
      <if test="record.forwhom != null" >
        forwhom = #{record.forwhom,jdbcType=VARCHAR},
      </if>
      <if test="record.way != null" >
        way = #{record.way,jdbcType=VARCHAR},
      </if>
      <if test="record.personnel != null" >
        personnel = #{record.personnel,jdbcType=VARCHAR},
      </if>
      <if test="record.takeTime != null" >
        take_time = #{record.takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isRegistration != null" >
        is_registration = #{record.isRegistration,jdbcType=VARCHAR},
      </if>
      <if test="record.note != null" >
        note = #{record.note,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=VARCHAR},
      </if>
      <if test="record.times != null" >
        times = #{record.times,jdbcType=INTEGER},
      </if>
      <if test="record.callcontent != null" >
        callcontent = #{record.callcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update callrecord
    set id = #{record.id,jdbcType=VARCHAR},
    name = #{record.name,jdbcType=VARCHAR},
    tell = #{record.tell,jdbcType=VARCHAR},
    forwhom = #{record.forwhom,jdbcType=VARCHAR},
    way = #{record.way,jdbcType=VARCHAR},
    personnel = #{record.personnel,jdbcType=VARCHAR},
    take_time = #{record.takeTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    is_registration = #{record.isRegistration,jdbcType=VARCHAR},
    note = #{record.note,jdbcType=VARCHAR},
    store_id = #{record.storeId,jdbcType=VARCHAR},
    times = #{record.times,jdbcType=INTEGER},
    callcontent = #{record.callcontent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update callrecord
    set id = #{record.id,jdbcType=VARCHAR},
    name = #{record.name,jdbcType=VARCHAR},
    tell = #{record.tell,jdbcType=VARCHAR},
    forwhom = #{record.forwhom,jdbcType=VARCHAR},
    way = #{record.way,jdbcType=VARCHAR},
    personnel = #{record.personnel,jdbcType=VARCHAR},
    take_time = #{record.takeTime,jdbcType=TIMESTAMP},
    update_time = #{record.updateTime,jdbcType=TIMESTAMP},
    is_registration = #{record.isRegistration,jdbcType=VARCHAR},
    note = #{record.note,jdbcType=VARCHAR},
    store_id = #{record.storeId,jdbcType=VARCHAR},
    times = #{record.times,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.luer.businessmanager.bean.Callrecord" >
    update callrecord
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tell != null" >
        tell = #{tell,jdbcType=VARCHAR},
      </if>
      <if test="forwhom != null" >
        forwhom = #{forwhom,jdbcType=VARCHAR},
      </if>
      <if test="way != null" >
        way = #{way,jdbcType=VARCHAR},
      </if>
      <if test="personnel != null" >
        personnel = #{personnel,jdbcType=VARCHAR},
      </if>
      <if test="takeTime != null" >
        take_time = #{takeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isRegistration != null" >
        is_registration = #{isRegistration,jdbcType=VARCHAR},
      </if>
      <if test="note != null" >
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="times != null" >
        times = #{times,jdbcType=INTEGER},
      </if>
      <if test="callcontent != null" >
        callcontent = #{callcontent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <!-- 批量删除 -->
  <delete id="deleteListById" parameterType="java.lang.String">
    delete from callrecord where id in
    <foreach item="id" collection="array" open="(" separator="," close=")">
      #{id}
    </foreach>
  </delete>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.luer.businessmanager.bean.Callrecord" >
    update callrecord
    set name = #{name,jdbcType=VARCHAR},
    tell = #{tell,jdbcType=VARCHAR},
    forwhom = #{forwhom,jdbcType=VARCHAR},
    way = #{way,jdbcType=VARCHAR},
    personnel = #{personnel,jdbcType=VARCHAR},
    take_time = #{takeTime,jdbcType=TIMESTAMP},
    update_time = #{updateTime,jdbcType=TIMESTAMP},
    is_registration = #{isRegistration,jdbcType=VARCHAR},
    note = #{note,jdbcType=VARCHAR},
    store_id = #{storeId,jdbcType=VARCHAR},
    times = #{times,jdbcType=INTEGER},
    callcontent = #{callcontent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luer.businessmanager.bean.Callrecord" >
    update callrecord
    set name = #{name,jdbcType=VARCHAR},
      tell = #{tell,jdbcType=VARCHAR},
      forwhom = #{forwhom,jdbcType=VARCHAR},
      way = #{way,jdbcType=VARCHAR},
      personnel = #{personnel,jdbcType=VARCHAR},
      take_time = #{takeTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      is_registration = #{isRegistration,jdbcType=VARCHAR},
      note = #{note,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=VARCHAR},
      times = #{times,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>
</mapper>