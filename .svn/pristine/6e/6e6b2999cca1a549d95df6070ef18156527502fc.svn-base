<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luer.stockandsales.dao.SupplierMapper">
    <resultMap id="BaseResultMap" type="com.luer.stockandsales.bean.Supplier">
        <id column="id" property="id" jdbcType="VARCHAR"/>
        <result column="supplier_name" property="supplierName" jdbcType="VARCHAR"/>
        <result column="brand" property="brand" jdbcType="VARCHAR"/>
        <result column="nature" property="nature" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="tell" property="tell" jdbcType="VARCHAR"/>
        <result column="remark" property="remark" jdbcType="VARCHAR"/>
        <result column="store_id" property="storeId" jdbcType="VARCHAR"/>
        <result column="lead_name" property="leadName" jdbcType="VARCHAR" />
        <result column="supplier_num" property="supplierNum" jdbcType="INTEGER" />

    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, supplier_name, brand, nature, address, tell, remark, store_id, lead_name, supplier_num
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luer.stockandsales.bean.SupplierExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from supplier
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from supplier
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from supplier
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.luer.stockandsales.bean.SupplierExample" >
        delete from supplier
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.luer.stockandsales.bean.Supplier" >
        insert into supplier (id, supplier_name, brand,
        nature, address, tell,
        remark, store_id, lead_name,
        supplier_num)
        values (#{id,jdbcType=VARCHAR}, #{supplierName,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR},
        #{nature,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{tell,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR}, #{storeId,jdbcType=VARCHAR}, #{leadName,jdbcType=VARCHAR},
        #{supplierNum,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.luer.stockandsales.bean.Supplier" >
        insert into supplier
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="supplierName != null" >
                supplier_name,
            </if>
            <if test="brand != null" >
                brand,
            </if>
            <if test="nature != null" >
                nature,
            </if>
            <if test="address != null" >
                address,
            </if>
            <if test="tell != null" >
                tell,
            </if>
            <if test="remark != null" >
                remark,
            </if>
            <if test="storeId != null" >
                store_id,
            </if>
            <if test="leadName != null" >
                lead_name,
            </if>
            <if test="supplierNum != null" >
                supplier_num,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="supplierName != null" >
                #{supplierName,jdbcType=VARCHAR},
            </if>
            <if test="brand != null" >
                #{brand,jdbcType=VARCHAR},
            </if>
            <if test="nature != null" >
                #{nature,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                #{address,jdbcType=VARCHAR},
            </if>
            <if test="tell != null" >
                #{tell,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="storeId != null" >
                #{storeId,jdbcType=VARCHAR},
            </if>
            <if test="leadName != null" >
                #{leadName,jdbcType=VARCHAR},
            </if>
            <if test="supplierNum != null" >
                #{supplierNum,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.luer.stockandsales.bean.SupplierExample" resultType="java.lang.Integer" >
        select count(*) from supplier
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update supplier
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.supplierName != null" >
                supplier_name = #{record.supplierName,jdbcType=VARCHAR},
            </if>
            <if test="record.brand != null" >
                brand = #{record.brand,jdbcType=VARCHAR},
            </if>
            <if test="record.nature != null" >
                nature = #{record.nature,jdbcType=VARCHAR},
            </if>
            <if test="record.address != null" >
                address = #{record.address,jdbcType=VARCHAR},
            </if>
            <if test="record.tell != null" >
                tell = #{record.tell,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null" >
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
            <if test="record.storeId != null" >
                store_id = #{record.storeId,jdbcType=VARCHAR},
            </if>
            <if test="record.leadName != null" >
                lead_name = #{record.leadName,jdbcType=VARCHAR},
            </if>
            <if test="record.supplierNum != null" >
                supplier_num = #{record.supplierNum,jdbcType=INTEGER},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update supplier
        set id = #{record.id,jdbcType=VARCHAR},
        supplier_name = #{record.supplierName,jdbcType=VARCHAR},
        brand = #{record.brand,jdbcType=VARCHAR},
        nature = #{record.nature,jdbcType=VARCHAR},
        address = #{record.address,jdbcType=VARCHAR},
        tell = #{record.tell,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR},
        store_id = #{record.storeId,jdbcType=VARCHAR},
        lead_name = #{record.leadName,jdbcType=VARCHAR},
        supplier_num = #{record.supplierNum,jdbcType=INTEGER}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.luer.stockandsales.bean.Supplier" >
        update supplier
        <set >
            <if test="supplierName != null" >
                supplier_name = #{supplierName,jdbcType=VARCHAR},
            </if>
            <if test="brand != null" >
                brand = #{brand,jdbcType=VARCHAR},
            </if>
            <if test="nature != null" >
                nature = #{nature,jdbcType=VARCHAR},
            </if>
            <if test="address != null" >
                address = #{address,jdbcType=VARCHAR},
            </if>
            <if test="tell != null" >
                tell = #{tell,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="storeId != null" >
                store_id = #{storeId,jdbcType=VARCHAR},
            </if>
            <if test="leadName != null" >
                lead_name = #{leadName,jdbcType=VARCHAR},
            </if>
            <if test="supplierNum != null" >
                supplier_num = #{supplierNum,jdbcType=INTEGER},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.luer.stockandsales.bean.Supplier" >
        update supplier
        set supplier_name = #{supplierName,jdbcType=VARCHAR},
        brand = #{brand,jdbcType=VARCHAR},
        nature = #{nature,jdbcType=VARCHAR},
        address = #{address,jdbcType=VARCHAR},
        tell = #{tell,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        store_id = #{storeId,jdbcType=VARCHAR},
        lead_name = #{leadName,jdbcType=VARCHAR},
        supplier_num = #{supplierNum,jdbcType=INTEGER}
        where id = #{id,jdbcType=VARCHAR}
    </update>


    <select id="selectAll" resultMap="BaseResultMap">
       select * from supplier
    </select>
    <!--查询商品对应供应商信息-->
    <select id="selectByGoodsName" resultMap="BaseResultMap">
        select * from supplier where goods_name = #{goodsName}
    </select>
    <!--查询门店对应供应商-->
    <select id="selectByStoreId" resultMap="BaseResultMap">
        select * from supplier where store_id=#{storeId}
    </select>
    
    <select id="selectSupplierIdByStoreId" resultType="java.lang.String">
       select id from supplier where store_id=#{storeId}
    </select>

</mapper>