<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luer.storemanager.dao.CheckOutMapper" >
  <resultMap id="BaseResultMap" type="com.luer.storemanager.bean.CheckOut" >
      <id column="id" property="id" jdbcType="VARCHAR" />
      <result column="store_id" property="storeId" jdbcType="VARCHAR" />
      <result column="customer_id" property="customerId" jdbcType="VARCHAR" />
      <result column="room_id" property="roomId" jdbcType="VARCHAR" />
      <result column="all_cost" property="allCost" jdbcType="DOUBLE" />
      <result column="balance" property="balance" jdbcType="DOUBLE" />
      <result column="out_time" property="outTime" jdbcType="TIMESTAMP" />
      <result column="creater_id" property="createrId" jdbcType="VARCHAR" />
      <result column="meal_fee" property="mealFee" jdbcType="DOUBLE" />
      <result column="add_service_fee" property="addServiceFee" jdbcType="DOUBLE" />
      <result column="shopping_fee" property="shoppingFee" jdbcType="DOUBLE" />
      <result column="coupons" property="coupons" jdbcType="DOUBLE" />
    <result column="customerName" property="customerName" jdbcType="VARCHAR" />
    <result column="roomNum" property="roomNum" jdbcType="VARCHAR" />
  </resultMap>
  


    <!--查询所有的退房记录 -->
    <select id="selectCheckOut" resultMap="BaseResultMap">
        select co.id, co.customer_id, co.room_id,
        co.all_cost, co.balance, co.out_time,
        co.creater_id, co.meal_fee, co.add_service_fee,
        co.shopping_fee, co.coupons,c.name as customerName,r.num as roomNum
        from check_out co left join customer_basic c on co.customer_id=c.id
        left join room r on co.room_id=r.id WHERE co.store_id=#{storeId}
    </select>

    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
        id, store_id, customer_id, room_id, all_cost, balance, out_time, creater_id, meal_fee,
        add_service_fee, shopping_fee, coupons
    </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luer.storemanager.bean.CheckOutExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from check_out
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from check_out
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
        delete from check_out
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <delete id="deleteByExample" parameterType="com.luer.storemanager.bean.CheckOutExample" >
        delete from check_out
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.luer.storemanager.bean.CheckOut" >
        insert into check_out (id, store_id, customer_id,
        room_id, all_cost, balance,
        out_time, creater_id, meal_fee,
        add_service_fee, shopping_fee, coupons
        )
        values (#{id,jdbcType=VARCHAR}, #{storeId,jdbcType=VARCHAR}, #{customerId,jdbcType=VARCHAR},
        #{roomId,jdbcType=VARCHAR}, #{allCost,jdbcType=DOUBLE}, #{balance,jdbcType=DOUBLE},
        #{outTime,jdbcType=TIMESTAMP}, #{createrId,jdbcType=VARCHAR}, #{mealFee,jdbcType=DOUBLE},
        #{addServiceFee,jdbcType=DOUBLE}, #{shoppingFee,jdbcType=DOUBLE}, #{coupons,jdbcType=DOUBLE}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.luer.storemanager.bean.CheckOut" >
        insert into check_out
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="storeId != null" >
                store_id,
            </if>
            <if test="customerId != null" >
                customer_id,
            </if>
            <if test="roomId != null" >
                room_id,
            </if>
            <if test="allCost != null" >
                all_cost,
            </if>
            <if test="balance != null" >
                balance,
            </if>
            <if test="outTime != null" >
                out_time,
            </if>
            <if test="createrId != null" >
                creater_id,
            </if>
            <if test="mealFee != null" >
                meal_fee,
            </if>
            <if test="addServiceFee != null" >
                add_service_fee,
            </if>
            <if test="shoppingFee != null" >
                shopping_fee,
            </if>
            <if test="coupons != null" >
                coupons,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="storeId != null" >
                #{storeId,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null" >
                #{customerId,jdbcType=VARCHAR},
            </if>
            <if test="roomId != null" >
                #{roomId,jdbcType=VARCHAR},
            </if>
            <if test="allCost != null" >
                #{allCost,jdbcType=DOUBLE},
            </if>
            <if test="balance != null" >
                #{balance,jdbcType=DOUBLE},
            </if>
            <if test="outTime != null" >
                #{outTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createrId != null" >
                #{createrId,jdbcType=VARCHAR},
            </if>
            <if test="mealFee != null" >
                #{mealFee,jdbcType=DOUBLE},
            </if>
            <if test="addServiceFee != null" >
                #{addServiceFee,jdbcType=DOUBLE},
            </if>
            <if test="shoppingFee != null" >
                #{shoppingFee,jdbcType=DOUBLE},
            </if>
            <if test="coupons != null" >
                #{coupons,jdbcType=DOUBLE},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.luer.storemanager.bean.CheckOutExample" resultType="java.lang.Integer" >
        select count(*) from check_out
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update check_out
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.storeId != null" >
                store_id = #{record.storeId,jdbcType=VARCHAR},
            </if>
            <if test="record.customerId != null" >
                customer_id = #{record.customerId,jdbcType=VARCHAR},
            </if>
            <if test="record.roomId != null" >
                room_id = #{record.roomId,jdbcType=VARCHAR},
            </if>
            <if test="record.allCost != null" >
                all_cost = #{record.allCost,jdbcType=DOUBLE},
            </if>
            <if test="record.balance != null" >
                balance = #{record.balance,jdbcType=DOUBLE},
            </if>
            <if test="record.outTime != null" >
                out_time = #{record.outTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.createrId != null" >
                creater_id = #{record.createrId,jdbcType=VARCHAR},
            </if>
            <if test="record.mealFee != null" >
                meal_fee = #{record.mealFee,jdbcType=DOUBLE},
            </if>
            <if test="record.addServiceFee != null" >
                add_service_fee = #{record.addServiceFee,jdbcType=DOUBLE},
            </if>
            <if test="record.shoppingFee != null" >
                shopping_fee = #{record.shoppingFee,jdbcType=DOUBLE},
            </if>
            <if test="record.coupons != null" >
                coupons = #{record.coupons,jdbcType=DOUBLE},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update check_out
        set id = #{record.id,jdbcType=VARCHAR},
        store_id = #{record.storeId,jdbcType=VARCHAR},
        customer_id = #{record.customerId,jdbcType=VARCHAR},
        room_id = #{record.roomId,jdbcType=VARCHAR},
        all_cost = #{record.allCost,jdbcType=DOUBLE},
        balance = #{record.balance,jdbcType=DOUBLE},
        out_time = #{record.outTime,jdbcType=TIMESTAMP},
        creater_id = #{record.createrId,jdbcType=VARCHAR},
        meal_fee = #{record.mealFee,jdbcType=DOUBLE},
        add_service_fee = #{record.addServiceFee,jdbcType=DOUBLE},
        shopping_fee = #{record.shoppingFee,jdbcType=DOUBLE},
        coupons = #{record.coupons,jdbcType=DOUBLE}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.luer.storemanager.bean.CheckOut" >
        update check_out
        <set >
            <if test="storeId != null" >
                store_id = #{storeId,jdbcType=VARCHAR},
            </if>
            <if test="customerId != null" >
                customer_id = #{customerId,jdbcType=VARCHAR},
            </if>
            <if test="roomId != null" >
                room_id = #{roomId,jdbcType=VARCHAR},
            </if>
            <if test="allCost != null" >
                all_cost = #{allCost,jdbcType=DOUBLE},
            </if>
            <if test="balance != null" >
                balance = #{balance,jdbcType=DOUBLE},
            </if>
            <if test="outTime != null" >
                out_time = #{outTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createrId != null" >
                creater_id = #{createrId,jdbcType=VARCHAR},
            </if>
            <if test="mealFee != null" >
                meal_fee = #{mealFee,jdbcType=DOUBLE},
            </if>
            <if test="addServiceFee != null" >
                add_service_fee = #{addServiceFee,jdbcType=DOUBLE},
            </if>
            <if test="shoppingFee != null" >
                shopping_fee = #{shoppingFee,jdbcType=DOUBLE},
            </if>
            <if test="coupons != null" >
                coupons = #{coupons,jdbcType=DOUBLE},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.luer.storemanager.bean.CheckOut" >
    update check_out
    set store_id = #{storeId,jdbcType=VARCHAR},
      customer_id = #{customerId,jdbcType=VARCHAR},
      room_id = #{roomId,jdbcType=VARCHAR},
      all_cost = #{allCost,jdbcType=DOUBLE},
      balance = #{balance,jdbcType=DOUBLE},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      creater_id = #{createrId,jdbcType=VARCHAR},
      meal_fee = #{mealFee,jdbcType=DOUBLE},
      add_service_fee = #{addServiceFee,jdbcType=DOUBLE},
      shopping_fee = #{shoppingFee,jdbcType=DOUBLE},
      coupons = #{coupons,jdbcType=DOUBLE}
    where id = #{id,jdbcType=VARCHAR}
  </update>
    
    
    <select id="selectStoreCheckOut" resultMap="BaseResultMap">
        select *
        from check_out co left join customer_basic c on co.customer_id=c.id
        left join room r on co.room_id=r.id
        WHERE motherId in
        <foreach collection="customerBasicIdList" item="customerBasicId" index="index" open="(" separator="," close=")">
            #{customerBasicId}
        </foreach>

    </select>
</mapper>