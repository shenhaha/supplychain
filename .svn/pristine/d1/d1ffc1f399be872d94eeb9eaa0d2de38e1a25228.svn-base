<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luer.businessmanager.dao.VisitMapper" >
  <resultMap id="BaseResultMap" type="com.luer.businessmanager.bean.Visit" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="classification" property="classification" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="tell" property="tell" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="VARCHAR" />
    <result column="we_chat" property="weChat" jdbcType="VARCHAR" />
    <result column="mam_name" property="mamName" jdbcType="VARCHAR" />
    <result column="room_id" property="roomId" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="health" property="health" jdbcType="VARCHAR" />
    <result column="Temperature" property="temperature" jdbcType="VARCHAR" />
    <result column="cough" property="cough" jdbcType="VARCHAR" />
    <result column="excepted" property="excepted" jdbcType="VARCHAR" />
    <result column="in_time" property="inTime" jdbcType="TIMESTAMP" />
    <result column="out_time" property="outTime" jdbcType="TIMESTAMP" />
    <result column="store_id" property="storeId" jdbcType="VARCHAR" />
    <result column="store_name" property="storeName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, classification, name, tell, sex, we_chat, mam_name, room_id, level, health, Temperature, 
    cough, excepted, in_time, out_time, store_id, store_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luer.businessmanager.bean.VisitExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from visit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from visit
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from visit
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.luer.businessmanager.bean.VisitExample" >
    delete from visit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.luer.businessmanager.bean.Visit" >
    insert into visit (id, classification, name, 
      tell, sex, we_chat, 
      mam_name, room_id, level, 
      health, Temperature, cough, 
      excepted, in_time, out_time, 
      store_id, store_name)
    values (#{id,jdbcType=VARCHAR}, #{classification,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{tell,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{weChat,jdbcType=VARCHAR}, 
      #{mamName,jdbcType=VARCHAR}, #{roomId,jdbcType=VARCHAR}, #{level,jdbcType=VARCHAR}, 
      #{health,jdbcType=VARCHAR}, #{temperature,jdbcType=VARCHAR}, #{cough,jdbcType=VARCHAR}, 
      #{excepted,jdbcType=VARCHAR}, #{inTime,jdbcType=TIMESTAMP}, #{outTime,jdbcType=TIMESTAMP}, 
      #{storeId,jdbcType=VARCHAR}, #{storeName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.luer.businessmanager.bean.Visit" >
    insert into visit
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="classification != null" >
        classification,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="tell != null" >
        tell,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="weChat != null" >
        we_chat,
      </if>
      <if test="mamName != null" >
        mam_name,
      </if>
      <if test="roomId != null" >
        room_id,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="health != null" >
        health,
      </if>
      <if test="temperature != null" >
        Temperature,
      </if>
      <if test="cough != null" >
        cough,
      </if>
      <if test="excepted != null" >
        excepted,
      </if>
      <if test="inTime != null" >
        in_time,
      </if>
      <if test="outTime != null" >
        out_time,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="storeName != null" >
        store_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="classification != null" >
        #{classification,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tell != null" >
        #{tell,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=VARCHAR},
      </if>
      <if test="weChat != null" >
        #{weChat,jdbcType=VARCHAR},
      </if>
      <if test="mamName != null" >
        #{mamName,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="health != null" >
        #{health,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null" >
        #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="cough != null" >
        #{cough,jdbcType=VARCHAR},
      </if>
      <if test="excepted != null" >
        #{excepted,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null" >
        #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null" >
        #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null" >
        #{storeName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.luer.businessmanager.bean.VisitExample" resultType="java.lang.Integer" >
    select count(*) from visit
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update visit
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.classification != null" >
        classification = #{record.classification,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tell != null" >
        tell = #{record.tell,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=VARCHAR},
      </if>
      <if test="record.weChat != null" >
        we_chat = #{record.weChat,jdbcType=VARCHAR},
      </if>
      <if test="record.mamName != null" >
        mam_name = #{record.mamName,jdbcType=VARCHAR},
      </if>
      <if test="record.roomId != null" >
        room_id = #{record.roomId,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.health != null" >
        health = #{record.health,jdbcType=VARCHAR},
      </if>
      <if test="record.temperature != null" >
        Temperature = #{record.temperature,jdbcType=VARCHAR},
      </if>
      <if test="record.cough != null" >
        cough = #{record.cough,jdbcType=VARCHAR},
      </if>
      <if test="record.excepted != null" >
        excepted = #{record.excepted,jdbcType=VARCHAR},
      </if>
      <if test="record.inTime != null" >
        in_time = #{record.inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.outTime != null" >
        out_time = #{record.outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=VARCHAR},
      </if>
      <if test="record.storeName != null" >
        store_name = #{record.storeName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update visit
    set id = #{record.id,jdbcType=VARCHAR},
      classification = #{record.classification,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      tell = #{record.tell,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=VARCHAR},
      we_chat = #{record.weChat,jdbcType=VARCHAR},
      mam_name = #{record.mamName,jdbcType=VARCHAR},
      room_id = #{record.roomId,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      health = #{record.health,jdbcType=VARCHAR},
      Temperature = #{record.temperature,jdbcType=VARCHAR},
      cough = #{record.cough,jdbcType=VARCHAR},
      excepted = #{record.excepted,jdbcType=VARCHAR},
      in_time = #{record.inTime,jdbcType=TIMESTAMP},
      out_time = #{record.outTime,jdbcType=TIMESTAMP},
      store_id = #{record.storeId,jdbcType=VARCHAR},
      store_name = #{record.storeName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.luer.businessmanager.bean.Visit" >
    update visit
    <set >
      <if test="classification != null" >
        classification = #{classification,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tell != null" >
        tell = #{tell,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=VARCHAR},
      </if>
      <if test="weChat != null" >
        we_chat = #{weChat,jdbcType=VARCHAR},
      </if>
      <if test="mamName != null" >
        mam_name = #{mamName,jdbcType=VARCHAR},
      </if>
      <if test="roomId != null" >
        room_id = #{roomId,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="health != null" >
        health = #{health,jdbcType=VARCHAR},
      </if>
      <if test="temperature != null" >
        Temperature = #{temperature,jdbcType=VARCHAR},
      </if>
      <if test="cough != null" >
        cough = #{cough,jdbcType=VARCHAR},
      </if>
      <if test="excepted != null" >
        excepted = #{excepted,jdbcType=VARCHAR},
      </if>
      <if test="inTime != null" >
        in_time = #{inTime,jdbcType=TIMESTAMP},
      </if>
      <if test="outTime != null" >
        out_time = #{outTime,jdbcType=TIMESTAMP},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=VARCHAR},
      </if>
      <if test="storeName != null" >
        store_name = #{storeName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.luer.businessmanager.bean.Visit" >
    update visit
    set classification = #{classification,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      tell = #{tell,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=VARCHAR},
      we_chat = #{weChat,jdbcType=VARCHAR},
      mam_name = #{mamName,jdbcType=VARCHAR},
      room_id = #{roomId,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      health = #{health,jdbcType=VARCHAR},
      Temperature = #{temperature,jdbcType=VARCHAR},
      cough = #{cough,jdbcType=VARCHAR},
      excepted = #{excepted,jdbcType=VARCHAR},
      in_time = #{inTime,jdbcType=TIMESTAMP},
      out_time = #{outTime,jdbcType=TIMESTAMP},
      store_id = #{storeId,jdbcType=VARCHAR},
      store_name = #{storeName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectByLevel" resultMap="BaseResultMap">

    select * from visit where store_id=#{storeId} and classification=#{classification} and level=#{level}
  </select>
</mapper>