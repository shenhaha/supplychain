package com.luer.storemanager.controller;

import com.luer.comm.utils.ResultSet;
import com.luer.storemanager.bean.Shopping;
import com.luer.storemanager.service.ShoppingService;
import lombok.NonNull;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import java.util.List;

/**
 * 购物信息服务类
 *
 * @ClassName ShoppingController
 * @Author GavinJiang
 * @Date 2018/8/21 10:20.
 */
@Controller
@RequestMapping("/shopping")
public class ShoppingController {
    @Autowired
    private ShoppingService shoppingService;

    /**
     * 查询所有的购物
     *
     * @return java.util.List<com.luer.storemanager.bean.Shopping>
     * @author GavinJiang
     * @date
     * @params
     */
    @ResponseBody
    @RequestMapping("selectShoppingAll")
    public List<Shopping> selectShoppingAll() {
        List<Shopping> selectShoppingAll = shoppingService.selectShopping();
        return selectShoppingAll;
    }

    /**
     * 添加购物信息
     *
     * @param shopping
     * @return com.luer.comm.utils.ResultSet
     * @author GavinJiang
     * @date
     * @params
     */
    @ResponseBody
    @RequestMapping("addShopping")
    public ResultSet addShopping(Shopping shopping) {
        shoppingService.insert(shopping);
        return ResultSet.getSuccess();
    }

    /**
     * 修改购物信息
     *
     * @param shopping
     * @return com.luer.comm.utils.ResultSet
     * @author GavinJiang
     * @date
     * @params
     */
    @ResponseBody
    @RequestMapping("updateShopping")
    public ResultSet updateShopping(Shopping shopping) {
        shoppingService.insert(shopping);
        return ResultSet.getSuccess();
    }

    /**
     * @return
     * @description 根据id删除门店人员购物信息
     * @author GavinJiang
     * @date
     * @params [id]
     */
    @ResponseBody
    @RequestMapping("daleteShoppig")
    public ResultSet daleteShoppig(@NonNull String id) {
        shoppingService.deleteByPrimaryKey(id);
        return ResultSet.getSuccess();
    }


    /**
     * @return
     * @description 根据id批量删除门店人员购物信息
     * @author GavinJiang
     * @date
     * @params [ids]
     */
    @ResponseBody
    @RequestMapping("daleteShoppigs")
    public ResultSet daleteShoppigs(@NonNull String ids) {
        String[] id = ids.split(",");
        for (int i = 0; i < id.length; i++) {
            shoppingService.deleteByPrimaryKey(id[i]);
        }
        return ResultSet.getSuccess();
    }
}
