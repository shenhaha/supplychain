<%@ page contentType="text/html;charset=UTF-8" language="java" %>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<c:set var="ctx" value="${pageContext.request.contextPath}"/>
<html>
<head>
    <title>换房调整</title>
</head>
<body>
<div class="container-fluid">
    <!-- Row -->
    <div class="row">
        <div class="col-sm-12">
            <%--<div class="panel-heading">
                <div class="pull-left">
                    <ol class="breadcrumb">
                        <li><a href="${ctx}/index">首页</a></li>
                        <li class="active">换房管理</li>
                    </ol>
                </div>
                <div class="clearfix"></div>
            </div>--%>

            <!--会员管理记录开始-->
            <div id="repairdiv">
                <div class="panel-body">
                    <div class="table-wrap">
                        <table id="previewList" class="table" data-paging="true" data-filtering="true"
                               data-sorting="true">
                        </table>
                    </div>
                </div>
            </div>
            <!--会员管理记录结束-->
        </div>
    </div>
    <!-- /Row -->
</div>
<script>
    $(function () {
        var previewTitle = [
            {"name": "id", "visible": false},
            {"name": "roomId;", "visible": false},
            {"name": "storeId", "visible": false},
            {"name": "orderCustomerId", "visible": false},
            {"name": "motherName", "title": "妈妈姓名"},
            {"name": "roomStyle", "title": "房间类型"},
            {"name": "roomNum", "title": "房间号"},
            /*{"name": "status", "title": "状态"}*/
            {"name": "beginTime", "title": "开始时间"},
            {"name": "endTime", "title": "结束时间"},

        ];
        //启动模态框
        //启动footable
        var ft = FooTable.init('#previewList', {
            "columns": previewTitle,
            "rows": $.get("${ctx}/preview/selectPreviewByStoreId?storeId="+'<%=session.getAttribute("storeId")%>'), //查询  服务器路径
            //功能操作
            editing: {
                enabled: true,
                addRow: function () {
                    //新增模态框
                    var dialog = BootstrapDialog.show({
                        type: BootstrapDialog.TYPE_DEFAULT,
                        title: "<span style=\"color: #ab8ce4\"><i></i>新增一条数据</span>",
                        closable: false,
                        draggable: true,
                        cssClass: 'api-blacklist-form-add',
                        message: $('<div></div>').load('${ctx}/template/storemanager/preview.jsp'),//加载弹出页面
                        size: BootstrapDialog.SIZE_WIDE,//弹出框大小。
                        buttons: [{
                            id: 'btn-form-submit',
                            label: '提交',
                            icon: 'fa fa-check-circle',
                            cssClass: 'btn-primary',
                            action: function () {
                                var json = {
                                    storeId: '<%=session.getAttribute("storeId")%>',
                                    motherName: $('#motherName').val(),
                                    roomStyle: $('#roomStyle').val(),
                                    roomNum: $('#roomNum').val(),
                                    beginTime: $('#beginTime').val(),
                                    endTime: $('#endTime').val()

                                };
                                $("#myform").bootstrapValidator({
                                    live: 'disabled',//验证时机，enabled是内容有变化就验证（默认），disabled和submitted是提交再验证
                                    excluded: [':disabled', ':hidden', ':not(:visible)'],//排除无需验证的控件，比如被禁用的或者被隐藏的
                                    submitButtons: '#btn-test',//指定提交按钮，如果验证失败则变成disabled，但我没试成功，反而加了这句话非submit按钮也会提交到action指定页面
                                    message: '通用的验证失败消息',//好像从来没出现过
                                    feedbackIcons: {//根据验证结果显示的各种图标
                                        valid: 'glyphicon glyphicon-ok',
                                        invalid: 'glyphicon glyphicon-remove',
                                        validating: 'glyphicon glyphicon-refresh'
                                    },
                                    fields: {
                                        motherName: {
                                            validators: {
                                                notEmpty: {
                                                    message: '请选择妈妈'
                                                },
                                            }
                                        },
                                        endTime: {
                                            validators: {
                                                notEmpty: {
                                                    message: '结束时间不能为空！'
                                                },
                                            }
                                        },
                                        beginTime: {
                                            validators: {
                                                notEmpty: {
                                                    message: '开始时间不能为空！'
                                                },
                                            }
                                        },
                                        roomNum: {
                                            validators: {
                                                notEmpty: {
                                                    message: '请选择房间号！'
                                                },
                                            }
                                        },
                                        roomStyle: {
                                            validators: {
                                                notEmpty: {
                                                    message: '请选择房间类型！'
                                                },
                                            }
                                        },

                                    }
                                });
                                var bootstrapValidator = $("#myform").data('bootstrapValidator');
                                bootstrapValidator.validate();
                                if (bootstrapValidator.isValid()) {
                                    //新增一条记录   url服务器路径
                                    $.post("${ctx}/preview/addOnePreview", json).done(function (data) {
                                        getCode(data)
                                    }).fail(function (data) {
                                        getCode(data)
                                    });
                                }
                            }
                        }, {
                            label: '关闭',
                            icon: 'fa fa-close',
                            action: function (dialogItself) {
                                dialogItself.close();
                            }
                        }]
                    });
                },
                //这里是修改时绑定数据
                editRow: function (row) {
                    var values = row.val();
                    var dialog = BootstrapDialog.show({
                        type: BootstrapDialog.TYPE_DEFAULT,
                        title: "<span style=\"color: #ab8ce4\"><i></i>修改一条数据</span>",
                        closable: false,
                        draggable: true,
                        cssClass: 'api-blacklist-form-add',
                        message: $('<div></div>').load('${ctx}/template/storemanager/preview.jsp'),//加载弹出页面
                        size: BootstrapDialog.SIZE_WIDE,//弹出框大小。
                        onshown: function () {
                            $(function () {
                                $.get("${ctx}/customerBasic/getTwoTypeCustomerBasics?storeId="+'<%=session.getAttribute("storeId")%>').done(function(data){
                                    $("#motherName option").remove();
                                    for(var i=0;i<data.length;i++){

                                        if(data[i].name==values.motherName){

                                            $("#motherName").append("<option selected='selected' value='"+data[i].id+"'>"+data[i].name+"</option>");
                                        }else {
                                            $("#motherName").append("<option value='"+data[i].id+"'>"+data[i].name+"</option>");
                                        }

                                    }

                                });

                                $.get("${ctx}/roomStyles/getRoomStylesList?storeId="+'<%=session.getAttribute("storeId")%>').done(function(data){
                                    $("#roomStyle option").remove();

                                    for(var i=0;i<data.length;i++){
                                        if(data[i].roomStyle==values.roomStyle){

                                            $("#roomStyle").append("<option selected='selected' value='"+data[i].id+"'>"+data[i].roomStyle+"</option>");
                                        }else{
                                            $("#roomStyle").append("<option value='"+data[i].id+"'>"+data[i].roomStyle+"</option>");
                                        }

                                    }
                                    $.get("${ctx}/room/selectByRoomStyleId?roomStylesId="+$("#roomStyle").val()).done(function(data) {
                                        $("#roomNum option").remove();
                                        for (var i = 0; i < data.length; i++) {
                                            if(data[i].num==values.roomNum){
                                                $("#roomNum").append("<option selected='selected' value='"+data[i].id+"'>"+ data[i].classify +data[i].num+"</option>");
                                            }else{
                                                $("#roomNum").append("<option value='" + data[i].id + "'>" + data[i].classify + data[i].num + "</option>");
                                            }
                                        }

                                    });
                                });

                            });

                            $('#id').val(values.id);
                            $('#motherName').val(values.motherName);
                            $('#roomStyle').val(values.roomStyle);
                            $('#roomNum').val(values.roomNum);
                            $('#beginTime').val(values.beginTime);
                            $('#endTime').val(values.endTime);
                        },
                        buttons: [{
                            id: 'btn-form-submit',
                            label: '提交',
                            icon: 'fa fa-check-circle',
                            cssClass: 'btn-primary',
                            action: function () {
                                var json = {
                                    id: $('#id').val(),
                                    storeId: '<%=session.getAttribute("storeId")%>',
                                    motherName: $('#motherName').val(),
                                    roomStyle: $('#roomStyle').val(),
                                    roomNum: $('#roomNum').val(),
                                    beginTime: $('#beginTime').val(),
                                    endTime: $('#endTime').val()
                                };
                                $("#myform").bootstrapValidator({
                                    live: 'disabled',//验证时机，enabled是内容有变化就验证（默认），disabled和submitted是提交再验证
                                    excluded: [':disabled', ':hidden', ':not(:visible)'],//排除无需验证的控件，比如被禁用的或者被隐藏的
                                    submitButtons: '#btn-test',//指定提交按钮，如果验证失败则变成disabled，但我没试成功，反而加了这句话非submit按钮也会提交到action指定页面
                                    message: '通用的验证失败消息',//好像从来没出现过
                                    feedbackIcons: {//根据验证结果显示的各种图标
                                        valid: 'glyphicon glyphicon-ok',
                                        invalid: 'glyphicon glyphicon-remove',
                                        validating: 'glyphicon glyphicon-refresh'
                                    },
                                    fields: {
                                        endTime: {
                                            validators: {
                                                notEmpty: {
                                                    message: '结束时间不能为空！'
                                                },
                                            }
                                        },
                                        beginTime: {
                                            validators: {
                                                notEmpty: {
                                                    message: '开始时间不能为空！'
                                                },
                                            }
                                        },
                                        roomNum: {
                                            validators: {
                                                notEmpty: {
                                                    message: '请选择房间号！'
                                                },
                                            }
                                        },
                                        roomStyle: {
                                            validators: {
                                                notEmpty: {
                                                    message: '请选择房间类型！'
                                                },
                                            }
                                        },
                                    }
                                });
                                var bootstrapValidator = $("#myform").data('bootstrapValidator');
                                bootstrapValidator.validate();
                                if (bootstrapValidator.isValid()) {
                                    $.post("${ctx}/preview/updateOnePreview", json).done(function (data) {
                                        getCode(data);
                                    }).fail(function (data) {
                                        getCode(data)
                                    });
                                }
                            }
                        }, {
                            label: '关闭',
                            icon: 'fa fa-close',
                            action: function (dialogItself) {
                                dialogItself.close();
                            }
                        }]
                    });
                },
                //删除操作    url  服务器路径
                deleteRow: function (row) {
                    myConfirm("${ctx}/getMemberManager/deleteMember", row);
                }
            }
        });
    });
</script>
</body>
</html>

