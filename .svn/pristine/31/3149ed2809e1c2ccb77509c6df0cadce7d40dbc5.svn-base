package com.luer.storemanager.controller;

import com.luer.comm.utils.ResultSet;
import com.luer.storemanager.bean.Coupons;
import com.luer.storemanager.service.CouponsService;
import lombok.NonNull;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import javax.servlet.http.HttpServletRequest;
import java.util.List;

/**
 * 优惠券信息控制层
 *
 * @ClassName CouponsController
 * @Author GavinJiang
 * @Date 2018/8/21 10:20.
 */
@Controller
@RequestMapping("/coupons")
public class CouponsController {
    @Autowired
    private CouponsService couponsService;

    /**
     * 查询所有的优惠券
     *
     * @return java.util.List<com.luer.storemanager.bean.Shopping>
     * @author GavinJiang
     * @date
     * @params
     */
    @ResponseBody
    @RequestMapping("selectCouponsAll")
    public List<Coupons> selectCouponsAll(HttpServletRequest request) {

        String storeId = (String) request.getSession().getAttribute("storeId");
        List<Coupons> selectCouponsAll = couponsService.selectCoupons(storeId);
        return selectCouponsAll;
    }
    //查询妈妈对应的优惠卷
    @ResponseBody
    @RequestMapping("selectCouponsByMotherId")
    public List<Coupons> selectCouponsByMotherId(String motherId) {
        List<Coupons> selectCouponsAll = couponsService.selectCouponsByMotherId(motherId);

        return selectCouponsAll;
    }
    /**
     * 添加优惠券信息
     *
     * @param coupons
     * @return com.luer.comm.utils.ResultSet
     * @author GavinJiang
     * @date
     * @params
     */
    @ResponseBody
    @RequestMapping("addShopping")
    public ResultSet addShopping(Coupons coupons) {
        couponsService.insert(coupons);
        return ResultSet.getSuccess();
    }

    /**
     * 修改优惠券信息
     *
     * @param coupons
     * @return com.luer.comm.utils.ResultSet
     * @author GavinJiang
     * @date
     * @params
     */
    @ResponseBody
    @RequestMapping("updateShopping")
    public ResultSet updateShopping(Coupons coupons) {
        couponsService.insert(coupons);
        return ResultSet.getSuccess();
    }

    /**
     * @return
     * @description 根据id批量删除优惠券信息
     * @author GavinJiang
     * @date
     * @params [id]
     */
    @ResponseBody
    @RequestMapping("daleteShoppig")
    public ResultSet daleteShoppig(@NonNull String id) {
        couponsService.deleteByPrimaryKey(id);
        return ResultSet.getSuccess();
    }


    /**
     * @return
     * @description 根据id批量删除优惠券信息
     * @author GavinJiang
     * @date
     * @params [ids]
     */
    @ResponseBody
    @RequestMapping("daleteShoppigs")
    public ResultSet daleteShoppigs(@NonNull String ids) {
        String[] id = ids.split(",");
        for (int i = 0; i < id.length; i++) {
            couponsService.deleteByPrimaryKey(id[i]);
        }
        return ResultSet.getSuccess();
    }
}
