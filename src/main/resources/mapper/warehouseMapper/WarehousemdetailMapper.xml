<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.luer.warehouse.dao.WarehousemdetailMapper" >
    <resultMap id="BaseResultMap" type="com.luer.warehouse.bean.Warehousemdetail" >
        <id column="id" property="id" jdbcType="VARCHAR" />
        <result column="material_id" property="materialId" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="warehouse_time" property="warehouseTime" jdbcType="TIMESTAMP" />
        <result column="odd_number" property="oddNumber" jdbcType="VARCHAR" />
        <result column="purchase_number" property="purchaseNumber" jdbcType="VARCHAR" />
        <result column="name" property="name" jdbcType="VARCHAR" />
        <result column="material_code" property="materialCode" jdbcType="VARCHAR" />
        <result column="item_code" property="itemCode" jdbcType="VARCHAR" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="brand" property="brand" jdbcType="VARCHAR" />
        <result column="unit" property="unit" jdbcType="VARCHAR" />
        <result column="default_loss" property="defaultLoss" jdbcType="VARCHAR" />
        <result column="manufacturer" property="manufacturer" jdbcType="VARCHAR" />
        <result column="cost_price" property="costPrice" jdbcType="DOUBLE" />
        <result column="ingredients" property="ingredients" jdbcType="VARCHAR" />
        <result column="number" property="number" jdbcType="INTEGER" />
        <result column="unit_price" property="unitPrice" jdbcType="DOUBLE" />
        <result column="tax_price" property="taxPrice" jdbcType="DOUBLE" />
        <result column="total_price" property="totalPrice" jdbcType="DOUBLE" />
        <result column="tax_total_price" property="taxTotalPrice" jdbcType="DOUBLE" />
        <result column="warehouse_price" property="warehousePrice" jdbcType="DOUBLE" />
        <result column="warehouse_taxprice" property="warehouseTaxprice" jdbcType="DOUBLE" />
        <result column="warehouse_amount" property="warehouseAmount" jdbcType="DOUBLE" />
        <result column="warehouse_taxamount" property="warehouseTaxamount" jdbcType="DOUBLE" />
        <result column="warehouse_number" property="warehouseNumber" jdbcType="INTEGER" />
        <result column="freight_share" property="freightShare" jdbcType="DOUBLE" />
        <result column="expenses" property="expenses" jdbcType="DOUBLE" />
        <result column="batch" property="batch" jdbcType="VARCHAR" />
        <result column="spare" property="spare" jdbcType="VARCHAR" />
        <result column="data_state" property="dataState" jdbcType="VARCHAR" />
        <result column="spare03" property="spare03" jdbcType="VARCHAR" />
        <result column="spare04" property="spare04" jdbcType="VARCHAR" />
        <result column="spare05" property="spare05" jdbcType="VARCHAR" />
        <result column="spare06" property="spare06" jdbcType="VARCHAR" />
        <result column="remark" property="remark" jdbcType="VARCHAR" />
    </resultMap>
    <sql id="Example_Where_Clause" >
        <where >
            <foreach collection="oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause" >
        <where >
            <foreach collection="example.oredCriteria" item="criteria" separator="or" >
                <if test="criteria.valid" >
                    <trim prefix="(" suffix=")" prefixOverrides="and" >
                        <foreach collection="criteria.criteria" item="criterion" >
                            <choose >
                                <when test="criterion.noValue" >
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue" >
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue" >
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue" >
                                    and ${criterion.condition}
                                    <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Base_Column_List" >
    id, material_id, create_time, update_time, warehouse_time, odd_number, purchase_number,
    name, material_code, item_code, type, brand, unit, default_loss, manufacturer, cost_price,
    ingredients, number, unit_price, tax_price, total_price, tax_total_price, warehouse_price,
    warehouse_taxprice, warehouse_amount, warehouse_taxamount, warehouse_number, freight_share,
    expenses, batch, spare, data_state, spare03, spare04, spare05, spare06, remark
  </sql>
    <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.luer.warehouse.bean.WarehousemdetailExample" >
        select
        <if test="distinct" >
            distinct
        </if>
        <include refid="Base_Column_List" />
        from warehousemdetail
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
        <if test="orderByClause != null" >
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from warehousemdetail
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from warehousemdetail
    where id = #{id,jdbcType=VARCHAR}
  </delete>
    <delete id="deleteByExample" parameterType="com.luer.warehouse.bean.WarehousemdetailExample" >
        delete from warehousemdetail
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </delete>
    <insert id="insert" parameterType="com.luer.warehouse.bean.Warehousemdetail" >
    insert into warehousemdetail (id, material_id, create_time,
      update_time, warehouse_time, odd_number,
      purchase_number, name, material_code,
      item_code, type, brand,
      unit, default_loss, manufacturer,
      cost_price, ingredients, number,
      unit_price, tax_price, total_price,
      tax_total_price, warehouse_price, warehouse_taxprice,
      warehouse_amount, warehouse_taxamount, warehouse_number,
      freight_share, expenses, batch,
      spare, data_state, spare03,
      spare04, spare05, spare06,
      remark)
    values (#{id,jdbcType=VARCHAR}, #{materialId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
      #{updateTime,jdbcType=TIMESTAMP}, #{warehouseTime,jdbcType=TIMESTAMP}, #{oddNumber,jdbcType=VARCHAR},
      #{purchaseNumber,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{materialCode,jdbcType=VARCHAR},
      #{itemCode,jdbcType=VARCHAR}, #{type,jdbcType=VARCHAR}, #{brand,jdbcType=VARCHAR},
      #{unit,jdbcType=VARCHAR}, #{defaultLoss,jdbcType=VARCHAR}, #{manufacturer,jdbcType=VARCHAR},
      #{costPrice,jdbcType=DOUBLE}, #{ingredients,jdbcType=VARCHAR}, #{number,jdbcType=INTEGER},
      #{unitPrice,jdbcType=DOUBLE}, #{taxPrice,jdbcType=DOUBLE}, #{totalPrice,jdbcType=DOUBLE},
      #{taxTotalPrice,jdbcType=DOUBLE}, #{warehousePrice,jdbcType=DOUBLE}, #{warehouseTaxprice,jdbcType=DOUBLE},
      #{warehouseAmount,jdbcType=DOUBLE}, #{warehouseTaxamount,jdbcType=DOUBLE}, #{warehouseNumber,jdbcType=INTEGER},
      #{freightShare,jdbcType=DOUBLE}, #{expenses,jdbcType=DOUBLE}, #{batch,jdbcType=VARCHAR},
      #{spare,jdbcType=VARCHAR}, #{dataState,jdbcType=VARCHAR}, #{spare03,jdbcType=VARCHAR},
      #{spare04,jdbcType=VARCHAR}, #{spare05,jdbcType=VARCHAR}, #{spare06,jdbcType=VARCHAR},
      #{remark,jdbcType=VARCHAR})
  </insert>
    <insert id="insertSelective" parameterType="com.luer.warehouse.bean.Warehousemdetail" >
        insert into warehousemdetail
        <trim prefix="(" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                id,
            </if>
            <if test="materialId != null" >
                material_id,
            </if>
            <if test="createTime != null" >
                create_time,
            </if>
            <if test="updateTime != null" >
                update_time,
            </if>
            <if test="warehouseTime != null" >
                warehouse_time,
            </if>
            <if test="oddNumber != null" >
                odd_number,
            </if>
            <if test="purchaseNumber != null" >
                purchase_number,
            </if>
            <if test="name != null" >
                name,
            </if>
            <if test="materialCode != null" >
                material_code,
            </if>
            <if test="itemCode != null" >
                item_code,
            </if>
            <if test="type != null" >
                type,
            </if>
            <if test="brand != null" >
                brand,
            </if>
            <if test="unit != null" >
                unit,
            </if>
            <if test="defaultLoss != null" >
                default_loss,
            </if>
            <if test="manufacturer != null" >
                manufacturer,
            </if>
            <if test="costPrice != null" >
                cost_price,
            </if>
            <if test="ingredients != null" >
                ingredients,
            </if>
            <if test="number != null" >
                number,
            </if>
            <if test="unitPrice != null" >
                unit_price,
            </if>
            <if test="taxPrice != null" >
                tax_price,
            </if>
            <if test="totalPrice != null" >
                total_price,
            </if>
            <if test="taxTotalPrice != null" >
                tax_total_price,
            </if>
            <if test="warehousePrice != null" >
                warehouse_price,
            </if>
            <if test="warehouseTaxprice != null" >
                warehouse_taxprice,
            </if>
            <if test="warehouseAmount != null" >
                warehouse_amount,
            </if>
            <if test="warehouseTaxamount != null" >
                warehouse_taxamount,
            </if>
            <if test="warehouseNumber != null" >
                warehouse_number,
            </if>
            <if test="freightShare != null" >
                freight_share,
            </if>
            <if test="expenses != null" >
                expenses,
            </if>
            <if test="batch != null" >
                batch,
            </if>
            <if test="spare != null" >
                spare,
            </if>
            <if test="dataState != null" >
                data_state,
            </if>
            <if test="spare03 != null" >
                spare03,
            </if>
            <if test="spare04 != null" >
                spare04,
            </if>
            <if test="spare05 != null" >
                spare05,
            </if>
            <if test="spare06 != null" >
                spare06,
            </if>
            <if test="remark != null" >
                remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="materialId != null" >
                #{materialId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="warehouseTime != null" >
                #{warehouseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="oddNumber != null" >
                #{oddNumber,jdbcType=VARCHAR},
            </if>
            <if test="purchaseNumber != null" >
                #{purchaseNumber,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="materialCode != null" >
                #{materialCode,jdbcType=VARCHAR},
            </if>
            <if test="itemCode != null" >
                #{itemCode,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                #{type,jdbcType=VARCHAR},
            </if>
            <if test="brand != null" >
                #{brand,jdbcType=VARCHAR},
            </if>
            <if test="unit != null" >
                #{unit,jdbcType=VARCHAR},
            </if>
            <if test="defaultLoss != null" >
                #{defaultLoss,jdbcType=VARCHAR},
            </if>
            <if test="manufacturer != null" >
                #{manufacturer,jdbcType=VARCHAR},
            </if>
            <if test="costPrice != null" >
                #{costPrice,jdbcType=DOUBLE},
            </if>
            <if test="ingredients != null" >
                #{ingredients,jdbcType=VARCHAR},
            </if>
            <if test="number != null" >
                #{number,jdbcType=INTEGER},
            </if>
            <if test="unitPrice != null" >
                #{unitPrice,jdbcType=DOUBLE},
            </if>
            <if test="taxPrice != null" >
                #{taxPrice,jdbcType=DOUBLE},
            </if>
            <if test="totalPrice != null" >
                #{totalPrice,jdbcType=DOUBLE},
            </if>
            <if test="taxTotalPrice != null" >
                #{taxTotalPrice,jdbcType=DOUBLE},
            </if>
            <if test="warehousePrice != null" >
                #{warehousePrice,jdbcType=DOUBLE},
            </if>
            <if test="warehouseTaxprice != null" >
                #{warehouseTaxprice,jdbcType=DOUBLE},
            </if>
            <if test="warehouseAmount != null" >
                #{warehouseAmount,jdbcType=DOUBLE},
            </if>
            <if test="warehouseTaxamount != null" >
                #{warehouseTaxamount,jdbcType=DOUBLE},
            </if>
            <if test="warehouseNumber != null" >
                #{warehouseNumber,jdbcType=INTEGER},
            </if>
            <if test="freightShare != null" >
                #{freightShare,jdbcType=DOUBLE},
            </if>
            <if test="expenses != null" >
                #{expenses,jdbcType=DOUBLE},
            </if>
            <if test="batch != null" >
                #{batch,jdbcType=VARCHAR},
            </if>
            <if test="spare != null" >
                #{spare,jdbcType=VARCHAR},
            </if>
            <if test="dataState != null" >
                #{dataState,jdbcType=VARCHAR},
            </if>
            <if test="spare03 != null" >
                #{spare03,jdbcType=VARCHAR},
            </if>
            <if test="spare04 != null" >
                #{spare04,jdbcType=VARCHAR},
            </if>
            <if test="spare05 != null" >
                #{spare05,jdbcType=VARCHAR},
            </if>
            <if test="spare06 != null" >
                #{spare06,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                #{remark,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.luer.warehouse.bean.WarehousemdetailExample" resultType="java.lang.Integer" >
        select count(*) from warehousemdetail
        <if test="_parameter != null" >
            <include refid="Example_Where_Clause" />
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map" >
        update warehousemdetail
        <set >
            <if test="record.id != null" >
                id = #{record.id,jdbcType=VARCHAR},
            </if>
            <if test="record.materialId != null" >
                material_id = #{record.materialId,jdbcType=VARCHAR},
            </if>
            <if test="record.createTime != null" >
                create_time = #{record.createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.updateTime != null" >
                update_time = #{record.updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.warehouseTime != null" >
                warehouse_time = #{record.warehouseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="record.oddNumber != null" >
                odd_number = #{record.oddNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.purchaseNumber != null" >
                purchase_number = #{record.purchaseNumber,jdbcType=VARCHAR},
            </if>
            <if test="record.name != null" >
                name = #{record.name,jdbcType=VARCHAR},
            </if>
            <if test="record.materialCode != null" >
                material_code = #{record.materialCode,jdbcType=VARCHAR},
            </if>
            <if test="record.itemCode != null" >
                item_code = #{record.itemCode,jdbcType=VARCHAR},
            </if>
            <if test="record.type != null" >
                type = #{record.type,jdbcType=VARCHAR},
            </if>
            <if test="record.brand != null" >
                brand = #{record.brand,jdbcType=VARCHAR},
            </if>
            <if test="record.unit != null" >
                unit = #{record.unit,jdbcType=VARCHAR},
            </if>
            <if test="record.defaultLoss != null" >
                default_loss = #{record.defaultLoss,jdbcType=VARCHAR},
            </if>
            <if test="record.manufacturer != null" >
                manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
            </if>
            <if test="record.costPrice != null" >
                cost_price = #{record.costPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.ingredients != null" >
                ingredients = #{record.ingredients,jdbcType=VARCHAR},
            </if>
            <if test="record.number != null" >
                number = #{record.number,jdbcType=INTEGER},
            </if>
            <if test="record.unitPrice != null" >
                unit_price = #{record.unitPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.taxPrice != null" >
                tax_price = #{record.taxPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.totalPrice != null" >
                total_price = #{record.totalPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.taxTotalPrice != null" >
                tax_total_price = #{record.taxTotalPrice,jdbcType=DOUBLE},
            </if>
            <if test="record.warehousePrice != null" >
                warehouse_price = #{record.warehousePrice,jdbcType=DOUBLE},
            </if>
            <if test="record.warehouseTaxprice != null" >
                warehouse_taxprice = #{record.warehouseTaxprice,jdbcType=DOUBLE},
            </if>
            <if test="record.warehouseAmount != null" >
                warehouse_amount = #{record.warehouseAmount,jdbcType=DOUBLE},
            </if>
            <if test="record.warehouseTaxamount != null" >
                warehouse_taxamount = #{record.warehouseTaxamount,jdbcType=DOUBLE},
            </if>
            <if test="record.warehouseNumber != null" >
                warehouse_number = #{record.warehouseNumber,jdbcType=INTEGER},
            </if>
            <if test="record.freightShare != null" >
                freight_share = #{record.freightShare,jdbcType=DOUBLE},
            </if>
            <if test="record.expenses != null" >
                expenses = #{record.expenses,jdbcType=DOUBLE},
            </if>
            <if test="record.batch != null" >
                batch = #{record.batch,jdbcType=VARCHAR},
            </if>
            <if test="record.spare != null" >
                spare = #{record.spare,jdbcType=VARCHAR},
            </if>
            <if test="record.dataState != null" >
                data_state = #{record.dataState,jdbcType=VARCHAR},
            </if>
            <if test="record.spare03 != null" >
                spare03 = #{record.spare03,jdbcType=VARCHAR},
            </if>
            <if test="record.spare04 != null" >
                spare04 = #{record.spare04,jdbcType=VARCHAR},
            </if>
            <if test="record.spare05 != null" >
                spare05 = #{record.spare05,jdbcType=VARCHAR},
            </if>
            <if test="record.spare06 != null" >
                spare06 = #{record.spare06,jdbcType=VARCHAR},
            </if>
            <if test="record.remark != null" >
                remark = #{record.remark,jdbcType=VARCHAR},
            </if>
        </set>
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByExample" parameterType="map" >
        update warehousemdetail
        set id = #{record.id,jdbcType=VARCHAR},
        material_id = #{record.materialId,jdbcType=VARCHAR},
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
        warehouse_time = #{record.warehouseTime,jdbcType=TIMESTAMP},
        odd_number = #{record.oddNumber,jdbcType=VARCHAR},
        purchase_number = #{record.purchaseNumber,jdbcType=VARCHAR},
        name = #{record.name,jdbcType=VARCHAR},
        material_code = #{record.materialCode,jdbcType=VARCHAR},
        item_code = #{record.itemCode,jdbcType=VARCHAR},
        type = #{record.type,jdbcType=VARCHAR},
        brand = #{record.brand,jdbcType=VARCHAR},
        unit = #{record.unit,jdbcType=VARCHAR},
        default_loss = #{record.defaultLoss,jdbcType=VARCHAR},
        manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
        cost_price = #{record.costPrice,jdbcType=DOUBLE},
        ingredients = #{record.ingredients,jdbcType=VARCHAR},
        number = #{record.number,jdbcType=INTEGER},
        unit_price = #{record.unitPrice,jdbcType=DOUBLE},
        tax_price = #{record.taxPrice,jdbcType=DOUBLE},
        total_price = #{record.totalPrice,jdbcType=DOUBLE},
        tax_total_price = #{record.taxTotalPrice,jdbcType=DOUBLE},
        warehouse_price = #{record.warehousePrice,jdbcType=DOUBLE},
        warehouse_taxprice = #{record.warehouseTaxprice,jdbcType=DOUBLE},
        warehouse_amount = #{record.warehouseAmount,jdbcType=DOUBLE},
        warehouse_taxamount = #{record.warehouseTaxamount,jdbcType=DOUBLE},
        warehouse_number = #{record.warehouseNumber,jdbcType=INTEGER},
        freight_share = #{record.freightShare,jdbcType=DOUBLE},
        expenses = #{record.expenses,jdbcType=DOUBLE},
        batch = #{record.batch,jdbcType=VARCHAR},
        spare = #{record.spare,jdbcType=VARCHAR},
        data_state = #{record.dataState,jdbcType=VARCHAR},
        spare03 = #{record.spare03,jdbcType=VARCHAR},
        spare04 = #{record.spare04,jdbcType=VARCHAR},
        spare05 = #{record.spare05,jdbcType=VARCHAR},
        spare06 = #{record.spare06,jdbcType=VARCHAR},
        remark = #{record.remark,jdbcType=VARCHAR}
        <if test="_parameter != null" >
            <include refid="Update_By_Example_Where_Clause" />
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.luer.warehouse.bean.Warehousemdetail" >
        update warehousemdetail
        <set >
            <if test="materialId != null" >
                material_id = #{materialId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null" >
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateTime != null" >
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="warehouseTime != null" >
                warehouse_time = #{warehouseTime,jdbcType=TIMESTAMP},
            </if>
            <if test="oddNumber != null" >
                odd_number = #{oddNumber,jdbcType=VARCHAR},
            </if>
            <if test="purchaseNumber != null" >
                purchase_number = #{purchaseNumber,jdbcType=VARCHAR},
            </if>
            <if test="name != null" >
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="materialCode != null" >
                material_code = #{materialCode,jdbcType=VARCHAR},
            </if>
            <if test="itemCode != null" >
                item_code = #{itemCode,jdbcType=VARCHAR},
            </if>
            <if test="type != null" >
                type = #{type,jdbcType=VARCHAR},
            </if>
            <if test="brand != null" >
                brand = #{brand,jdbcType=VARCHAR},
            </if>
            <if test="unit != null" >
                unit = #{unit,jdbcType=VARCHAR},
            </if>
            <if test="defaultLoss != null" >
                default_loss = #{defaultLoss,jdbcType=VARCHAR},
            </if>
            <if test="manufacturer != null" >
                manufacturer = #{manufacturer,jdbcType=VARCHAR},
            </if>
            <if test="costPrice != null" >
                cost_price = #{costPrice,jdbcType=DOUBLE},
            </if>
            <if test="ingredients != null" >
                ingredients = #{ingredients,jdbcType=VARCHAR},
            </if>
            <if test="number != null" >
                number = #{number,jdbcType=INTEGER},
            </if>
            <if test="unitPrice != null" >
                unit_price = #{unitPrice,jdbcType=DOUBLE},
            </if>
            <if test="taxPrice != null" >
                tax_price = #{taxPrice,jdbcType=DOUBLE},
            </if>
            <if test="totalPrice != null" >
                total_price = #{totalPrice,jdbcType=DOUBLE},
            </if>
            <if test="taxTotalPrice != null" >
                tax_total_price = #{taxTotalPrice,jdbcType=DOUBLE},
            </if>
            <if test="warehousePrice != null" >
                warehouse_price = #{warehousePrice,jdbcType=DOUBLE},
            </if>
            <if test="warehouseTaxprice != null" >
                warehouse_taxprice = #{warehouseTaxprice,jdbcType=DOUBLE},
            </if>
            <if test="warehouseAmount != null" >
                warehouse_amount = #{warehouseAmount,jdbcType=DOUBLE},
            </if>
            <if test="warehouseTaxamount != null" >
                warehouse_taxamount = #{warehouseTaxamount,jdbcType=DOUBLE},
            </if>
            <if test="warehouseNumber != null" >
                warehouse_number = #{warehouseNumber,jdbcType=INTEGER},
            </if>
            <if test="freightShare != null" >
                freight_share = #{freightShare,jdbcType=DOUBLE},
            </if>
            <if test="expenses != null" >
                expenses = #{expenses,jdbcType=DOUBLE},
            </if>
            <if test="batch != null" >
                batch = #{batch,jdbcType=VARCHAR},
            </if>
            <if test="spare != null" >
                spare = #{spare,jdbcType=VARCHAR},
            </if>
            <if test="dataState != null" >
                data_state = #{dataState,jdbcType=VARCHAR},
            </if>
            <if test="spare03 != null" >
                spare03 = #{spare03,jdbcType=VARCHAR},
            </if>
            <if test="spare04 != null" >
                spare04 = #{spare04,jdbcType=VARCHAR},
            </if>
            <if test="spare05 != null" >
                spare05 = #{spare05,jdbcType=VARCHAR},
            </if>
            <if test="spare06 != null" >
                spare06 = #{spare06,jdbcType=VARCHAR},
            </if>
            <if test="remark != null" >
                remark = #{remark,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.luer.warehouse.bean.Warehousemdetail" >
    update warehousemdetail
    set material_id = #{materialId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      warehouse_time = #{warehouseTime,jdbcType=TIMESTAMP},
      odd_number = #{oddNumber,jdbcType=VARCHAR},
      purchase_number = #{purchaseNumber,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      material_code = #{materialCode,jdbcType=VARCHAR},
      item_code = #{itemCode,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR},
      brand = #{brand,jdbcType=VARCHAR},
      unit = #{unit,jdbcType=VARCHAR},
      default_loss = #{defaultLoss,jdbcType=VARCHAR},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      cost_price = #{costPrice,jdbcType=DOUBLE},
      ingredients = #{ingredients,jdbcType=VARCHAR},
      number = #{number,jdbcType=INTEGER},
      unit_price = #{unitPrice,jdbcType=DOUBLE},
      tax_price = #{taxPrice,jdbcType=DOUBLE},
      total_price = #{totalPrice,jdbcType=DOUBLE},
      tax_total_price = #{taxTotalPrice,jdbcType=DOUBLE},
      warehouse_price = #{warehousePrice,jdbcType=DOUBLE},
      warehouse_taxprice = #{warehouseTaxprice,jdbcType=DOUBLE},
      warehouse_amount = #{warehouseAmount,jdbcType=DOUBLE},
      warehouse_taxamount = #{warehouseTaxamount,jdbcType=DOUBLE},
      warehouse_number = #{warehouseNumber,jdbcType=INTEGER},
      freight_share = #{freightShare,jdbcType=DOUBLE},
      expenses = #{expenses,jdbcType=DOUBLE},
      batch = #{batch,jdbcType=VARCHAR},
      spare = #{spare,jdbcType=VARCHAR},
      data_state = #{dataState,jdbcType=VARCHAR},
      spare03 = #{spare03,jdbcType=VARCHAR},
      spare04 = #{spare04,jdbcType=VARCHAR},
      spare05 = #{spare05,jdbcType=VARCHAR},
      spare06 = #{spare06,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="selectByPurchaseNumber" resultMap="BaseResultMap"  parameterType="java.lang.String">
    select * from warehousemdetail where  purchase_number = #{purchaseNumber,jdbcType=VARCHAR}
  </select>

    <select id="selectByOddNumber" resultMap="BaseResultMap"  parameterType="java.lang.String">
    select * from warehousemdetail where  odd_number = #{oddNumber,jdbcType=VARCHAR}
  </select>

    <select id="selectById" resultMap="BaseResultMap"  parameterType="java.lang.String">
    select * from warehousemdetail where  id = #{id,jdbcType=VARCHAR}
  </select>


    <delete id="deleteByPNumber" parameterType="java.lang.String" >
    delete from warehousemdetail where purchase_number = #{purchaseNumber,jdbcType=VARCHAR}
  </delete>



</mapper>